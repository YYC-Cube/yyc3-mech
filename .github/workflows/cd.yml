name: CD

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Build & Push Image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build & Push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

  deploy:
    name: Deploy to Kubernetes
    needs: docker
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.4

      - name: Write kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" > $HOME/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Set image digest output
        id: setimg
        run: |
          echo "IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.docker.outputs.digest }}" >> $GITHUB_OUTPUT

      - name: Apply manifests (namespace pre-exists)
        run: |
          kubectl -n ${K8S_NAMESPACE} apply -f deploy/k8s/deployment.yaml
          kubectl -n ${K8S_NAMESPACE} apply -f deploy/k8s/service.yaml
          kubectl -n ${K8S_NAMESPACE} apply -f deploy/k8s/hpa.yaml
        env:
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}

      - name: Set image & rollout
        run: |
          kubectl -n ${K8S_NAMESPACE} set image deployment/yyc-mech app=${IMAGE}
          kubectl -n ${K8S_NAMESPACE} rollout status deployment/yyc-mech --timeout=180s
        env:
          K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
          IMAGE: ${{ steps.setimg.outputs.IMAGE }}
