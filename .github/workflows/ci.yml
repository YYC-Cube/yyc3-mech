name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      clear_cache:
        description: "Force bypass caches and clean local cache directories"
        required: false
        default: "false"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      CI: true
      NEXT_TELEMETRY_DISABLED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Cache bust key suffix (optional)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.clear_cache == 'true'
        run: echo "CACHE_SUFFIX=$(date +%s)" >> $GITHUB_ENV

      - name: Determine pnpm store path
        id: pnpm-cache-dir
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-dir.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}-${{ env.CACHE_SUFFIX }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache Next.js build artifacts
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('pnpm-lock.yaml') }}-${{ hashFiles('**/*.ts', '**/*.tsx') }}-${{ env.CACHE_SUFFIX }}
          restore-keys: |
            ${{ runner.os }}-next-

      - name: Prefetch dependencies
        run: pnpm fetch

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Test (Vitest)
        run: pnpm test -- --coverage

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
